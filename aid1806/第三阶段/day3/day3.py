#day3.py

CSS Cascading Style Sheet  层叠样式表
　　　１，作用：
        １，修饰和美化页面元素
        ２，实现网页排版布局
    ２，ＣＳＳ使用
    　　　在ＨＴＭＬ文档中使用ＣＳＳ主要有三种方式
        １，行内样式／内联样式
            特点：在具体的标签中，使用style属性，
            引入ＣＳＳ样式代码

            语法：<标签　style="CSS样式声明"></style>
            １，ＣＳＳ样式声明／语句
                １，对当前元素添加样式
                ２，语法：
                    CSS　属性名：值；
            ２，注意：CSS样式声明可以是多条
        常见的CSS属性
        　１，设置字体的大小
        　　　　　font-size:13px;    
            浏览器默认字体大小是１６px 
         2,设置字体的颜色
         　　　　属性：color
           　　 值：颜色的英文单词
        3,设置背景颜色
        　　　　属性：background-color
            值：颜色的英文单词
    ２，文档内嵌／内部样式表
        特点：将CSS代码与具体的标签相分离，在HTML文档中
        使用<style></style>标签引入CSS代码
        语法：
            <style>
                选择器１
                选择器２
                选择器３
                ...
            </style>
            选择器：
                １，使用文档内嵌方式引入CSS样式表时，
                实现了结构与样式分离，但是需要自己
                定义选择器　连匹配文档元素，为其应用样式
                
                作用：匹配文档元素为其应用样式
                ２，语法：选择器实际由两部分组成
                　　　选择器（符）{
                        属性：值；
                        属性：值；
                }
                et.:
                    标签选择器／元素选择器：
                        使用标签名作为选择符，匹配
                        文档中所有的该标签，并且应用
                        样式
                        p{
                           font-size:20px;
                           color:green;
                        }
        注意：<style></style>可以书写在文档中的任意位置，
        但是基于样式优先原则，一般写在head里

    3,外链方式／外部样式表
        １，定义外部的.css文件　，在HTML中引入即可，真正实现
        文档与样式表的分离
        ２，语法：
            在外部的样式表中使用选择器定义样式：
            在HTML文档中使用<link>引入CSS文件
            et:
                <link rel="stylesheet" href="url">
        3,样式表特征：
            １，继承性：
                大部分的css属性都是可以被继承的
                子元素后者后代元素可以继承父元素中的样式
            　　　　所有的文本属性都可以被继承
                块元素的宽度与父元素保持一致
            ２，层叠性
                允许为元素定义多个样式，共同起作用
                et:
                    p{
                    color:red;
                    background-color:bule;
                    }
            3,优先级
                样式表的优先级
                    从低到高：
                    １，浏览器缺省设置（浏览器默认样式）
                    ２，文档内嵌／外链方式
                    (在不发生样式冲突的时候，样式起共同作用，当发生样式冲突时，
                    后来者居上，最后定义的样式最终显示)
                　　　　３，行内样式的优先级最高
            ４，css选择器
                １，作用：规范页面中哪些元素能够应用声明好的样式
                    目的：匹配页面元素
                ２，详解
                    １，标签选择器／元素选择器
                        特点：将标签名作为选择符，匹配文档中所有的该标签
                        包含后代元素
                        语法：标签名{
                            color:red;
                            ...
                        }
                        text-decoration:none

                    2,类选择器：
                        特点：通过元素的class属性值进行匹配
                        语法：
                         .c1{
                            样式
                         }
                         <p class="c1"></p>

                        类选择器的结合使用
                         1,标签名.类名（中间没有空格）
                         　表示在指定标签中匹配class属性值对应的元素
                         注意：标签名一定要写在前面

                         ２，　标签中使用两个类选择器的样式
                            <p class="类名２　类名２"></p>

                    3,id选择器
                    　　　　作用：HTML中所有元素都有一个id属性，主要用来
                    表示该元素在文档中的标志，具有唯一性

                    通过元素的id属性值进行匹配
                    语法：
                        #id属性值{
                            样式
                        }
                        注意：通常网页中外围的结构化标签，都使用id进行标识，
                        具有唯一性
                        et:
                        #nav{
                            样式
                        }
                        <div id="nav">导航条</div>
                    4.群组选择器
                        １，作用：为多个选择器设置共同的样式
                        ２，语法：
                            选择器１，选择器２，选择器３...{
                                样式
                            }
                            div,h1,p{
                                color:red;

                            }
                            <div></div>
                            <h1></h1>
                            <p></p>
                            <p class="c1"></p>
                    5,后代选择器
                        １，作用：依托于元素的后代关系来匹配（既包含直接子元素
                        也包含后代子元素）

                        ２，语法：
                            选择器１　选择器２{

                            }
                            在选择器１对应的元素中匹配后代元素，后代元素需满足选择器２
                            注意：中间有空格

                            et:
                             #nav sapn{

                             }
                             匹配#nav下的所有span元素

                    6,子代选择器
                        １，作用：依托于元素的子代关系来匹配，只
                        匹配直接子元素
                        ２，语法：
                            选择器１>选择器２{
                                样式
                            }
                            在选择器１对应的元素中匹配直接子元素，
                            满足选择器２的需求
                    7,伪类选择器
                        １，分类：
                            １，超链接伪类选择器
                            ２，动态伪类选择器
                        ２，作用：
                            主要是针对元素的不同状态去设置样式
                            １，超链接的不同状态
                                访问前　　:link
                                访问后   :visited
                                激活（鼠标点按不松） :active
                                鼠标滑过   :hover
                            ２，其他元素具备
                                鼠标滑过   :hover
                                鼠标点按   :active
                            ３，表单控件
                                获取到焦点时的状态   :focus
                                对文本和密码框而言，当用户点击输入时，
                                都视为获取焦点状态
                        ３，伪类选择器需要与其他选择器结合使用，
                        设置元素在不同状态下的样式
                            超链接 a:link{
                                color:black;
                                text-decoration:none;
                            }
                        4,如果要给超链接添加四种状态的样式，
                        必须按照以下顺序书写伪类选择器
                        :link
                        :visited
                        :hover
                        :active
        3,选择器的优先级
            当多个选择器的样式同时应用到一个元素上时，
            要按照不同选择器的优先级来应用样式
            判断选择器的优先级，主要看选择器的权重
            权值越大，优先级越高
            选择器　　　　　　　　　　　　　　权值
            标签选择器　　　　　　　　　　　　１
            类选择器／伪类选择器　　１０
            id选择器　　　　　　　　　　　　１００
            行内样式　　　　　　　　　　　　１０００

            如果是复杂的选择器（子代，后代），选择器最终的权值
            是各选择器权值之和

            #nav li{
                权值（101）
            }

            5,尺寸单位与颜色取值
                １，尺寸单位：
                    １，px   默认单位
                    ２，%    参照父元素对应属性的值进行获取

                ２，颜色表示方法
                 rag(r,g,b)表示颜色
                 　　　每一种三原色的取值范围：0-255
                    红色：rgb(255,0,0);
                    黑色：rgb(0,0,0);
                    白色：rgb(255,255,255);
                3,rgba(r,g,b,alpha)
                    设置颜色，还可以设置透明度
                    alpha   透明度的取值   0-1
                4,十六进制表示颜色
                    长十六进制　　十六进制取值范围：0-9 a-f
                    1,6位表示方法
                    　每两位为一组，代表一种三原色
                红色：#ff0000
                黄色：#00ff00
                黑色：#000000
                    ２，短十六进制　　　３位表示方式
                    浏览器对自动对每一位进行重复补全，
                    最终补全为长十六进制
                    红色：#f00  ---> #ff0000
    6,元素分类
        １，块元素
            特点：独占一行，不与其他元素共行显示
            ２，可以手动的设置宽高
        　　　　　div h1 p ul table form 
        ２，行内元素
            特点：可以与其他元素或者文本共行显示

            ２，不能手动的设置宽高，元素的大小由内容决定
            et:span i b label u s sub sup
        3,行内块元素
            特点：既可以与其他元素共行显示，也可以手动设置
            宽高
            et:img input 
            属性：
            　　可以通过vertical-align  设置行内块元素
            左右元素与其的垂直对齐方式
            取值：top/middle/bottom
            注意：vertical-align只在行内块元素中使用

    ７，行内元素是可以共行显示的，但是如果代码中出现了换行，
    页面最终效果上，行内元素之间会有空隙



